name: goals CI/CD
on: [push, workflow_dispatch]
jobs:
    Build_and_Test:
        runs-on: ubuntu-latest

        services:
          postgres_db:
            image: postgres:16
            ports:
              - 5432:5432
            env:
              POSTGRES_USER: user5
              POSTGRES_PASSWORD: pass5
              POSTGRES_DB: goalsdb

            options: >-
              --health-cmd="pg_isready -U user5"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=5

        steps:
            - name: checkout code
              uses: actions/checkout@v4
            - name: setup python on the VM
              uses: actions/setup-python@v5
              with:
                python-version: "3.13"
            - name: setup virtual environment
              run: |
                python3 -m venv venvgoalsapp
                source venvgoalsapp/bin/activate
                python3 -m pip install --upgrade pip
            - name: cache dependencies
              uses: actions/cache@v3
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
            - name: install dependencies
              run: |
                source venvgoalsapp/bin/activate
                echo $(pwd)
                pip install -r ./Backend/requirements.txt  
            - name: Install PostgreSQL client
              run: sudo apt-get update && sudo apt-get install -y postgresql-client
            - name: wait for postgresDB to start
              run: |
                echo "⏳ Waiting for Postgres service to become ready..."
                for i in {1..20}; do
                  pg_isready -h postgres_db -p 5432 -U user5 -d goalsdb && echo "✅ Postgres is ready!" && break
                  echo "Still waiting for Postgres ($i/20)..."
                  sleep 5
                done
                pg_isready -h postgres_db -p 5432 -U user5 -d goalsdb
            - name: run code
              env:
                DB_HOST: postgres_db        # ✅ match database.py
                DB_PORT: 5432
                DB_USER: user5
                DB_PASSWORD: pass5
                DB_NAME: goalsdb
              run: |
                source venvgoalsapp/bin/activate
                nohup python3 ./Backend/app.py > app.log 2>&1 &
                sleep 5
                pytest -v || (cat app.log && false)
            - name: Upload logs (if tests fail)
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: backend-logs
                path: app.log
                





